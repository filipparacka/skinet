{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n// todo: split\n/** Provides default values for Pagination and pager components */\nconst _c0 = function (a0, a1) {\n  return {\n    \"pull-left\": a0,\n    \"float-left\": a1\n  };\n};\nconst _c1 = function (a0, a1) {\n  return {\n    \"pull-right\": a0,\n    \"float-right\": a1\n  };\n};\nconst _c2 = function (a0, a1) {\n  return {\n    disabled: a0,\n    currentPage: a1\n  };\n};\nfunction PaginationComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 11)(1, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_1_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.selectPage(1, $event));\n    });\n    i0.ɵɵelementContainer(2, 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r11 = i0.ɵɵreference(13);\n    i0.ɵɵclassProp(\"disabled\", ctx_r0.noPrevious() || ctx_r0.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.customFirstTemplate || _r11)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c2, ctx_r0.noPrevious() || ctx_r0.disabled, ctx_r0.page));\n  }\n}\nfunction PaginationComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 14)(1, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_2_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.selectPage(ctx_r17.page - 1, $event));\n    });\n    i0.ɵɵelementContainer(2, 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const _r9 = i0.ɵɵreference(11);\n    i0.ɵɵclassProp(\"disabled\", ctx_r1.noPrevious() || ctx_r1.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.customPreviousTemplate || _r9)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c2, ctx_r1.noPrevious() || ctx_r1.disabled, ctx_r1.page));\n  }\n}\nconst _c3 = function (a0, a1, a2) {\n  return {\n    disabled: a0,\n    $implicit: a1,\n    currentPage: a2\n  };\n};\nfunction PaginationComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 15)(1, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_3_Template_a_click_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const pg_r19 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.selectPage(pg_r19.number, $event));\n    });\n    i0.ɵɵelementContainer(2, 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const pg_r19 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    const _r5 = i0.ɵɵreference(7);\n    i0.ɵɵclassProp(\"active\", pg_r19.active)(\"disabled\", ctx_r2.disabled && !pg_r19.active);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.customPageTemplate || _r5)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(6, _c3, ctx_r2.disabled, pg_r19, ctx_r2.page));\n  }\n}\nfunction PaginationComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 16)(1, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_4_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.selectPage(ctx_r22.page + 1, $event));\n    });\n    i0.ɵɵelementContainer(2, 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    const _r7 = i0.ɵɵreference(9);\n    i0.ɵɵclassProp(\"disabled\", ctx_r3.noNext() || ctx_r3.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.customNextTemplate || _r7)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c2, ctx_r3.noNext() || ctx_r3.disabled, ctx_r3.page));\n  }\n}\nfunction PaginationComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 17)(1, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_5_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.selectPage(ctx_r24.totalPages, $event));\n    });\n    i0.ɵɵelementContainer(2, 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    const _r13 = i0.ɵɵreference(15);\n    i0.ɵɵclassProp(\"disabled\", ctx_r4.noNext() || ctx_r4.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.customLastTemplate || _r13)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c2, ctx_r4.noNext() || ctx_r4.disabled, ctx_r4.page));\n  }\n}\nfunction PaginationComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const page_r26 = ctx.$implicit;\n    i0.ɵɵtextInterpolate(page_r26.text);\n  }\n}\nfunction PaginationComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r8.getText(\"next\"));\n  }\n}\nfunction PaginationComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r10.getText(\"previous\"));\n  }\n}\nfunction PaginationComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r12.getText(\"first\"));\n  }\n}\nfunction PaginationComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r14.getText(\"last\"));\n  }\n}\nclass PaginationConfig {\n  constructor() {\n    this.main = {\n      itemsPerPage: 10,\n      boundaryLinks: false,\n      directionLinks: true,\n      firstText: 'First',\n      previousText: 'Previous',\n      nextText: 'Next',\n      lastText: 'Last',\n      pageBtnClass: '',\n      rotate: true\n    };\n    this.pager = {\n      itemsPerPage: 15,\n      previousText: '« Previous',\n      nextText: 'Next »',\n      pageBtnClass: '',\n      align: true\n    };\n  }\n}\nPaginationConfig.ɵfac = function PaginationConfig_Factory(t) {\n  return new (t || PaginationConfig)();\n};\nPaginationConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PaginationConfig,\n  factory: PaginationConfig.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaginationConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst PAGER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PagerComponent),\n  multi: true\n};\nclass PagerComponent {\n  constructor(elementRef, paginationConfig, changeDetection) {\n    this.elementRef = elementRef;\n    this.changeDetection = changeDetection;\n    /** if `true` aligns each link to the sides of pager */\n    this.align = false;\n    /** if false first and last buttons will be hidden */\n    this.boundaryLinks = false;\n    /** if false previous and next buttons will be hidden */\n    this.directionLinks = true;\n    // labels\n    /** first button text */\n    this.firstText = 'First';\n    /** previous button text */\n    this.previousText = '« Previous';\n    /** next button text */\n    this.nextText = 'Next »';\n    /** last button text */\n    this.lastText = 'Last';\n    /** if true current page will in the middle of pages list */\n    this.rotate = true;\n    // css\n    /** add class to <code><li\\></code> */\n    this.pageBtnClass = '';\n    /** if true pagination component will be disabled */\n    this.disabled = false;\n    /** fired when total pages count changes, $event:number equals to total pages count */\n    this.numPages = new EventEmitter();\n    /** fired when page was changed, $event:{page, itemsPerPage} equals to\n     * object with current page index and number of items per page\n     */\n    this.pageChanged = new EventEmitter();\n    this.onChange = Function.prototype;\n    this.onTouched = Function.prototype;\n    this.classMap = '';\n    this.inited = false;\n    this._itemsPerPage = 15;\n    this._totalItems = 0;\n    this._totalPages = 0;\n    this._page = 1;\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(Object.assign({}, paginationConfig.main, paginationConfig.pager));\n    }\n  }\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  get itemsPerPage() {\n    return this._itemsPerPage;\n  }\n  set itemsPerPage(v) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  /** total number of items in all pages */\n  get totalItems() {\n    return this._totalItems;\n  }\n  set totalItems(v) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  get totalPages() {\n    return this._totalPages;\n  }\n  set totalPages(v) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n  get page() {\n    return this._page;\n  }\n  set page(value) {\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n  configureOptions(config) {\n    this.config = Object.assign({}, config);\n  }\n  ngOnInit() {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n    // watch for maxSize\n    if (typeof this.maxSize === 'undefined') {\n      this.maxSize = this.config?.maxSize || 0;\n    }\n    if (typeof this.rotate === 'undefined') {\n      this.rotate = !!this.config?.rotate;\n    }\n    if (typeof this.boundaryLinks === 'undefined') {\n      this.boundaryLinks = !!this.config?.boundaryLinks;\n    }\n    if (typeof this.directionLinks === 'undefined') {\n      this.directionLinks = !!this.config?.directionLinks;\n    }\n    if (typeof this.pageBtnClass === 'undefined') {\n      this.pageBtnClass = this.config?.pageBtnClass || '';\n    }\n    // base class\n    if (typeof this.itemsPerPage === 'undefined') {\n      this.itemsPerPage = this.config?.itemsPerPage || 0;\n    }\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n  writeValue(value) {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n  getText(key) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return this[`${key}Text`] || this.config[`${key}Text`];\n  }\n  noPrevious() {\n    return this.page === 1;\n  }\n  noNext() {\n    return this.page === this.totalPages;\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  selectPage(page, event) {\n    if (event) {\n      event.preventDefault();\n    }\n    if (!this.disabled) {\n      if (event && event.target) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const target = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n  // Create page object used in template\n  makePage(num, text, active) {\n    return {\n      text,\n      number: num,\n      active\n    };\n  }\n  getPages(currentPage, totalPages) {\n    const pages = [];\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n    // recompute if maxSize\n    if (isMaxSized && this.maxSize) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage = (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n    return pages;\n  }\n  // base class\n  calculateTotalPages() {\n    const totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil(this.totalItems / this.itemsPerPage);\n    return Math.max(totalPages || 0, 1);\n  }\n}\nPagerComponent.ɵfac = function PagerComponent_Factory(t) {\n  return new (t || PagerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PaginationConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nPagerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PagerComponent,\n  selectors: [[\"pager\"]],\n  inputs: {\n    align: \"align\",\n    maxSize: \"maxSize\",\n    boundaryLinks: \"boundaryLinks\",\n    directionLinks: \"directionLinks\",\n    firstText: \"firstText\",\n    previousText: \"previousText\",\n    nextText: \"nextText\",\n    lastText: \"lastText\",\n    rotate: \"rotate\",\n    pageBtnClass: \"pageBtnClass\",\n    disabled: \"disabled\",\n    itemsPerPage: \"itemsPerPage\",\n    totalItems: \"totalItems\"\n  },\n  outputs: {\n    numPages: \"numPages\",\n    pageChanged: \"pageChanged\"\n  },\n  features: [i0.ɵɵProvidersFeature([PAGER_CONTROL_VALUE_ACCESSOR])],\n  decls: 7,\n  vars: 24,\n  consts: [[1, \"pager\"], [3, \"ngClass\"], [\"href\", \"\", 3, \"click\"]],\n  template: function PagerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\", 0)(1, \"li\", 1)(2, \"a\", 2);\n      i0.ɵɵlistener(\"click\", function PagerComponent_Template_a_click_2_listener($event) {\n        return ctx.selectPage(ctx.page - 1, $event);\n      });\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"li\", 1)(5, \"a\", 2);\n      i0.ɵɵlistener(\"click\", function PagerComponent_Template_a_click_5_listener($event) {\n        return ctx.selectPage(ctx.page + 1, $event);\n      });\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMap(ctx.pageBtnClass);\n      i0.ɵɵclassProp(\"disabled\", ctx.noPrevious())(\"previous\", ctx.align);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(18, _c0, ctx.align, ctx.align));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.getText(\"previous\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMap(ctx.pageBtnClass);\n      i0.ɵɵclassProp(\"disabled\", ctx.noNext())(\"next\", ctx.align);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(21, _c1, ctx.align, ctx.align));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.getText(\"next\"));\n    }\n  },\n  dependencies: [i2.NgClass],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'pager',\n      providers: [PAGER_CONTROL_VALUE_ACCESSOR],\n      template: \"<ul class=\\\"pager\\\">\\n  <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-left': align, 'float-left': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a>\\n  </li>\\n  <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a>\\n  </li>\\n</ul>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: PaginationConfig\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    align: [{\n      type: Input\n    }],\n    maxSize: [{\n      type: Input\n    }],\n    boundaryLinks: [{\n      type: Input\n    }],\n    directionLinks: [{\n      type: Input\n    }],\n    firstText: [{\n      type: Input\n    }],\n    previousText: [{\n      type: Input\n    }],\n    nextText: [{\n      type: Input\n    }],\n    lastText: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    pageBtnClass: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    numPages: [{\n      type: Output\n    }],\n    pageChanged: [{\n      type: Output\n    }],\n    itemsPerPage: [{\n      type: Input\n    }],\n    totalItems: [{\n      type: Input\n    }]\n  });\n})();\nconst PAGINATION_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PaginationComponent),\n  multi: true\n};\nclass PaginationComponent {\n  constructor(elementRef, paginationConfig, changeDetection) {\n    this.elementRef = elementRef;\n    this.changeDetection = changeDetection;\n    /** if `true` aligns each link to the sides of pager */\n    this.align = true;\n    /** if false first and last buttons will be hidden */\n    this.boundaryLinks = false;\n    /** if false previous and next buttons will be hidden */\n    this.directionLinks = true;\n    /** if true current page will in the middle of pages list */\n    this.rotate = true;\n    // css\n    /** add class to <code><li\\></code> */\n    this.pageBtnClass = '';\n    /** if true pagination component will be disabled */\n    this.disabled = false;\n    /** fired when total pages count changes, $event:number equals to total pages count */\n    this.numPages = new EventEmitter();\n    /** fired when page was changed, $event:{page, itemsPerPage} equals to object\n     * with current page index and number of items per page\n     */\n    this.pageChanged = new EventEmitter();\n    this.onChange = Function.prototype;\n    this.onTouched = Function.prototype;\n    this.classMap = '';\n    this.inited = false;\n    this._itemsPerPage = 10;\n    this._totalItems = 0;\n    this._totalPages = 0;\n    this._page = 1;\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(paginationConfig.main);\n    }\n  }\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  get itemsPerPage() {\n    return this._itemsPerPage;\n  }\n  set itemsPerPage(v) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  /** total number of items in all pages */\n  get totalItems() {\n    return this._totalItems;\n  }\n  set totalItems(v) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  get totalPages() {\n    return this._totalPages;\n  }\n  set totalPages(v) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n  get page() {\n    return this._page;\n  }\n  set page(value) {\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n  configureOptions(config) {\n    this.config = Object.assign({}, config);\n  }\n  ngOnInit() {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n    // watch for maxSize\n    if (typeof this.maxSize === 'undefined') {\n      this.maxSize = this.config?.maxSize || 0;\n    }\n    if (typeof this.rotate === 'undefined') {\n      this.rotate = !!this.config?.rotate;\n    }\n    if (typeof this.boundaryLinks === 'undefined') {\n      this.boundaryLinks = !!this.config?.boundaryLinks;\n    }\n    if (typeof this.directionLinks === 'undefined') {\n      this.directionLinks = !!this.config?.directionLinks;\n    }\n    if (typeof this.pageBtnClass === 'undefined') {\n      this.pageBtnClass = this.config?.pageBtnClass || '';\n    }\n    // base class\n    if (typeof this.itemsPerPage === 'undefined') {\n      this.itemsPerPage = this.config?.itemsPerPage || 0;\n    }\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n  writeValue(value) {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n  getText(key) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return this[`${key}Text`] || this.config[`${key}Text`];\n  }\n  noPrevious() {\n    return this.page === 1;\n  }\n  noNext() {\n    return this.page === this.totalPages;\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  selectPage(page, event) {\n    if (event) {\n      event.preventDefault();\n    }\n    if (!this.disabled) {\n      if (event && event.target) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const target = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n  // Create page object used in template\n  makePage(num, text, active) {\n    return {\n      text,\n      number: num,\n      active\n    };\n  }\n  getPages(currentPage, totalPages) {\n    const pages = [];\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n    // recompute if maxSize\n    if (isMaxSized && this.maxSize) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage = (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n    return pages;\n  }\n  // base class\n  calculateTotalPages() {\n    const totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil(this.totalItems / this.itemsPerPage);\n    return Math.max(totalPages || 0, 1);\n  }\n}\nPaginationComponent.ɵfac = function PaginationComponent_Factory(t) {\n  return new (t || PaginationComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PaginationConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nPaginationComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PaginationComponent,\n  selectors: [[\"pagination\"]],\n  inputs: {\n    align: \"align\",\n    maxSize: \"maxSize\",\n    boundaryLinks: \"boundaryLinks\",\n    directionLinks: \"directionLinks\",\n    firstText: \"firstText\",\n    previousText: \"previousText\",\n    nextText: \"nextText\",\n    lastText: \"lastText\",\n    rotate: \"rotate\",\n    pageBtnClass: \"pageBtnClass\",\n    disabled: \"disabled\",\n    customPageTemplate: \"customPageTemplate\",\n    customNextTemplate: \"customNextTemplate\",\n    customPreviousTemplate: \"customPreviousTemplate\",\n    customFirstTemplate: \"customFirstTemplate\",\n    customLastTemplate: \"customLastTemplate\",\n    itemsPerPage: \"itemsPerPage\",\n    totalItems: \"totalItems\"\n  },\n  outputs: {\n    numPages: \"numPages\",\n    pageChanged: \"pageChanged\"\n  },\n  features: [i0.ɵɵProvidersFeature([PAGINATION_CONTROL_VALUE_ACCESSOR])],\n  decls: 16,\n  vars: 6,\n  consts: [[1, \"pagination\", 3, \"ngClass\"], [\"class\", \"pagination-first page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-prev page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-page page-item\", 3, \"active\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"pagination-next page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-last page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"defaultPageTemplate\", \"\"], [\"defaultNextTemplate\", \"\"], [\"defaultPreviousTemplate\", \"\"], [\"defaultFirstTemplate\", \"\"], [\"defaultLastTemplate\", \"\"], [1, \"pagination-first\", \"page-item\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"pagination-prev\", \"page-item\"], [1, \"pagination-page\", \"page-item\"], [1, \"pagination-next\", \"page-item\"], [1, \"pagination-last\", \"page-item\"]],\n  template: function PaginationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\", 0);\n      i0.ɵɵtemplate(1, PaginationComponent_li_1_Template, 3, 7, \"li\", 1);\n      i0.ɵɵtemplate(2, PaginationComponent_li_2_Template, 3, 7, \"li\", 2);\n      i0.ɵɵtemplate(3, PaginationComponent_li_3_Template, 3, 10, \"li\", 3);\n      i0.ɵɵtemplate(4, PaginationComponent_li_4_Template, 3, 7, \"li\", 4);\n      i0.ɵɵtemplate(5, PaginationComponent_li_5_Template, 3, 7, \"li\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, PaginationComponent_ng_template_6_Template, 1, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(8, PaginationComponent_ng_template_8_Template, 1, 1, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(10, PaginationComponent_ng_template_10_Template, 1, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(12, PaginationComponent_ng_template_12_Template, 1, 1, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(14, PaginationComponent_ng_template_14_Template, 1, 1, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.classMap);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.pages);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaginationComponent, [{\n    type: Component,\n    args: [{\n      selector: 'pagination',\n      providers: [PAGINATION_CONTROL_VALUE_ACCESSOR],\n      template: \"<ul class=\\\"pagination\\\" [ngClass]=\\\"classMap\\\">\\n  <li class=\\\"pagination-first page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customFirstTemplate || defaultFirstTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-prev page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page - 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPreviousTemplate || defaultPreviousTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li *ngFor=\\\"let pg of pages\\\"\\n      [class.active]=\\\"pg.active\\\"\\n      [class.disabled]=\\\"disabled && !pg.active\\\"\\n      class=\\\"pagination-page page-item\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(pg.number, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPageTemplate || defaultPageTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pg, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-next page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page + 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customNextTemplate || defaultNextTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-last page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(totalPages, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customLastTemplate || defaultLastTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n</ul>\\n\\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\\n\\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\\n\\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\\n\\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\\n\\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: PaginationConfig\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    align: [{\n      type: Input\n    }],\n    maxSize: [{\n      type: Input\n    }],\n    boundaryLinks: [{\n      type: Input\n    }],\n    directionLinks: [{\n      type: Input\n    }],\n    firstText: [{\n      type: Input\n    }],\n    previousText: [{\n      type: Input\n    }],\n    nextText: [{\n      type: Input\n    }],\n    lastText: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    pageBtnClass: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    customPageTemplate: [{\n      type: Input\n    }],\n    customNextTemplate: [{\n      type: Input\n    }],\n    customPreviousTemplate: [{\n      type: Input\n    }],\n    customFirstTemplate: [{\n      type: Input\n    }],\n    customLastTemplate: [{\n      type: Input\n    }],\n    numPages: [{\n      type: Output\n    }],\n    pageChanged: [{\n      type: Output\n    }],\n    itemsPerPage: [{\n      type: Input\n    }],\n    totalItems: [{\n      type: Input\n    }]\n  });\n})();\nclass PaginationModule {\n  static forRoot() {\n    return {\n      ngModule: PaginationModule,\n      providers: []\n    };\n  }\n}\nPaginationModule.ɵfac = function PaginationModule_Factory(t) {\n  return new (t || PaginationModule)();\n};\nPaginationModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PaginationModule\n});\nPaginationModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaginationModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [PagerComponent, PaginationComponent],\n      exports: [PagerComponent, PaginationComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PagerComponent, PaginationComponent, PaginationConfig, PaginationModule };","map":{"version":3,"names":["i0","Injectable","forwardRef","EventEmitter","Component","Input","Output","NgModule","NG_VALUE_ACCESSOR","i2","CommonModule","PaginationConfig","constructor","main","itemsPerPage","boundaryLinks","directionLinks","firstText","previousText","nextText","lastText","pageBtnClass","rotate","pager","align","ɵfac","ɵprov","type","args","providedIn","PAGER_CONTROL_VALUE_ACCESSOR","provide","useExisting","PagerComponent","multi","elementRef","paginationConfig","changeDetection","disabled","numPages","pageChanged","onChange","Function","prototype","onTouched","classMap","inited","_itemsPerPage","_totalItems","_totalPages","_page","config","configureOptions","Object","assign","v","totalPages","calculateTotalPages","totalItems","emit","selectPage","page","value","_previous","markForCheck","ngOnInit","window","nativeElement","getAttribute","maxSize","pages","getPages","writeValue","getText","key","noPrevious","noNext","registerOnChange","fn","registerOnTouched","event","preventDefault","target","blur","makePage","num","text","active","number","currentPage","startPage","endPage","isMaxSized","Math","max","floor","ceil","min","toString","push","previousPageSet","unshift","nextPageSet","ElementRef","ChangeDetectorRef","ɵcmp","NgClass","selector","providers","template","PAGINATION_CONTROL_VALUE_ACCESSOR","PaginationComponent","NgForOf","NgIf","NgTemplateOutlet","customPageTemplate","customNextTemplate","customPreviousTemplate","customFirstTemplate","customLastTemplate","PaginationModule","forRoot","ngModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/Filip/source/repos/skinet/skinet/ClientApp/node_modules/ngx-bootstrap/pagination/fesm2020/ngx-bootstrap-pagination.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n// todo: split\n/** Provides default values for Pagination and pager components */\nclass PaginationConfig {\n    constructor() {\n        this.main = {\n            itemsPerPage: 10,\n            boundaryLinks: false,\n            directionLinks: true,\n            firstText: 'First',\n            previousText: 'Previous',\n            nextText: 'Next',\n            lastText: 'Last',\n            pageBtnClass: '',\n            rotate: true\n        };\n        this.pager = {\n            itemsPerPage: 15,\n            previousText: '« Previous',\n            nextText: 'Next »',\n            pageBtnClass: '',\n            align: true\n        };\n    }\n}\nPaginationConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: PaginationConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nPaginationConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: PaginationConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: PaginationConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nconst PAGER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PagerComponent),\n    multi: true\n};\nclass PagerComponent {\n    constructor(elementRef, paginationConfig, changeDetection) {\n        this.elementRef = elementRef;\n        this.changeDetection = changeDetection;\n        /** if `true` aligns each link to the sides of pager */\n        this.align = false;\n        /** if false first and last buttons will be hidden */\n        this.boundaryLinks = false;\n        /** if false previous and next buttons will be hidden */\n        this.directionLinks = true;\n        // labels\n        /** first button text */\n        this.firstText = 'First';\n        /** previous button text */\n        this.previousText = '« Previous';\n        /** next button text */\n        this.nextText = 'Next »';\n        /** last button text */\n        this.lastText = 'Last';\n        /** if true current page will in the middle of pages list */\n        this.rotate = true;\n        // css\n        /** add class to <code><li\\></code> */\n        this.pageBtnClass = '';\n        /** if true pagination component will be disabled */\n        this.disabled = false;\n        /** fired when total pages count changes, $event:number equals to total pages count */\n        this.numPages = new EventEmitter();\n        /** fired when page was changed, $event:{page, itemsPerPage} equals to\n         * object with current page index and number of items per page\n         */\n        this.pageChanged = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.classMap = '';\n        this.inited = false;\n        this._itemsPerPage = 15;\n        this._totalItems = 0;\n        this._totalPages = 0;\n        this._page = 1;\n        this.elementRef = elementRef;\n        if (!this.config) {\n            this.configureOptions(Object.assign({}, paginationConfig.main, paginationConfig.pager));\n        }\n    }\n    /** maximum number of items per page. If value less than 1 will display all items on one page */\n    get itemsPerPage() {\n        return this._itemsPerPage;\n    }\n    set itemsPerPage(v) {\n        this._itemsPerPage = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    /** total number of items in all pages */\n    get totalItems() {\n        return this._totalItems;\n    }\n    set totalItems(v) {\n        this._totalItems = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    get totalPages() {\n        return this._totalPages;\n    }\n    set totalPages(v) {\n        this._totalPages = v;\n        this.numPages.emit(v);\n        if (this.inited) {\n            this.selectPage(this.page);\n        }\n    }\n    get page() {\n        return this._page;\n    }\n    set page(value) {\n        const _previous = this._page;\n        this._page = value > this.totalPages ? this.totalPages : value || 1;\n        this.changeDetection.markForCheck();\n        if (_previous === this._page || typeof _previous === 'undefined') {\n            return;\n        }\n        this.pageChanged.emit({\n            page: this._page,\n            itemsPerPage: this.itemsPerPage\n        });\n    }\n    configureOptions(config) {\n        this.config = Object.assign({}, config);\n    }\n    ngOnInit() {\n        if (typeof window !== 'undefined') {\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n        }\n        // watch for maxSize\n        if (typeof this.maxSize === 'undefined') {\n            this.maxSize = this.config?.maxSize || 0;\n        }\n        if (typeof this.rotate === 'undefined') {\n            this.rotate = !!this.config?.rotate;\n        }\n        if (typeof this.boundaryLinks === 'undefined') {\n            this.boundaryLinks = !!this.config?.boundaryLinks;\n        }\n        if (typeof this.directionLinks === 'undefined') {\n            this.directionLinks = !!this.config?.directionLinks;\n        }\n        if (typeof this.pageBtnClass === 'undefined') {\n            this.pageBtnClass = this.config?.pageBtnClass || '';\n        }\n        // base class\n        if (typeof this.itemsPerPage === 'undefined') {\n            this.itemsPerPage = this.config?.itemsPerPage || 0;\n        }\n        this.totalPages = this.calculateTotalPages();\n        // this class\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.inited = true;\n    }\n    writeValue(value) {\n        this.page = value;\n        this.pages = this.getPages(this.page, this.totalPages);\n    }\n    getText(key) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return this[`${key}Text`] || this.config[`${key}Text`];\n    }\n    noPrevious() {\n        return this.page === 1;\n    }\n    noNext() {\n        return this.page === this.totalPages;\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    selectPage(page, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!this.disabled) {\n            if (event && event.target) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const target = event.target;\n                target.blur();\n            }\n            this.writeValue(page);\n            this.onChange(this.page);\n        }\n    }\n    // Create page object used in template\n    makePage(num, text, active) {\n        return { text, number: num, active };\n    }\n    getPages(currentPage, totalPages) {\n        const pages = [];\n        // Default page limits\n        let startPage = 1;\n        let endPage = totalPages;\n        const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n        // recompute if maxSize\n        if (isMaxSized && this.maxSize) {\n            if (this.rotate) {\n                // Current page is displayed in the middle of the visible ones\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n                endPage = startPage + this.maxSize - 1;\n                // Adjust if limit is exceeded\n                if (endPage > totalPages) {\n                    endPage = totalPages;\n                    startPage = endPage - this.maxSize + 1;\n                }\n            }\n            else {\n                // Visible pages are paginated with maxSize\n                startPage =\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n                // Adjust last page if limit is exceeded\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n            }\n        }\n        // Add page number links\n        for (let num = startPage; num <= endPage; num++) {\n            const page = this.makePage(num, num.toString(), num === currentPage);\n            pages.push(page);\n        }\n        // Add links to move between page sets\n        if (isMaxSized && !this.rotate) {\n            if (startPage > 1) {\n                const previousPageSet = this.makePage(startPage - 1, '...', false);\n                pages.unshift(previousPageSet);\n            }\n            if (endPage < totalPages) {\n                const nextPageSet = this.makePage(endPage + 1, '...', false);\n                pages.push(nextPageSet);\n            }\n        }\n        return pages;\n    }\n    // base class\n    calculateTotalPages() {\n        const totalPages = this.itemsPerPage < 1\n            ? 1\n            : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    }\n}\nPagerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: PagerComponent, deps: [{ token: i0.ElementRef }, { token: PaginationConfig }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nPagerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.3\", type: PagerComponent, selector: \"pager\", inputs: { align: \"align\", maxSize: \"maxSize\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", firstText: \"firstText\", previousText: \"previousText\", nextText: \"nextText\", lastText: \"lastText\", rotate: \"rotate\", pageBtnClass: \"pageBtnClass\", disabled: \"disabled\", itemsPerPage: \"itemsPerPage\", totalItems: \"totalItems\" }, outputs: { numPages: \"numPages\", pageChanged: \"pageChanged\" }, providers: [PAGER_CONTROL_VALUE_ACCESSOR], ngImport: i0, template: \"<ul class=\\\"pager\\\">\\n  <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-left': align, 'float-left': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a>\\n  </li>\\n  <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a>\\n  </li>\\n</ul>\\n\", dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: PagerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'pager', providers: [PAGER_CONTROL_VALUE_ACCESSOR], template: \"<ul class=\\\"pager\\\">\\n  <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-left': align, 'float-left': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a>\\n  </li>\\n  <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a>\\n  </li>\\n</ul>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: PaginationConfig }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { align: [{\n                type: Input\n            }], maxSize: [{\n                type: Input\n            }], boundaryLinks: [{\n                type: Input\n            }], directionLinks: [{\n                type: Input\n            }], firstText: [{\n                type: Input\n            }], previousText: [{\n                type: Input\n            }], nextText: [{\n                type: Input\n            }], lastText: [{\n                type: Input\n            }], rotate: [{\n                type: Input\n            }], pageBtnClass: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], numPages: [{\n                type: Output\n            }], pageChanged: [{\n                type: Output\n            }], itemsPerPage: [{\n                type: Input\n            }], totalItems: [{\n                type: Input\n            }] } });\n\nconst PAGINATION_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PaginationComponent),\n    multi: true\n};\nclass PaginationComponent {\n    constructor(elementRef, paginationConfig, changeDetection) {\n        this.elementRef = elementRef;\n        this.changeDetection = changeDetection;\n        /** if `true` aligns each link to the sides of pager */\n        this.align = true;\n        /** if false first and last buttons will be hidden */\n        this.boundaryLinks = false;\n        /** if false previous and next buttons will be hidden */\n        this.directionLinks = true;\n        /** if true current page will in the middle of pages list */\n        this.rotate = true;\n        // css\n        /** add class to <code><li\\></code> */\n        this.pageBtnClass = '';\n        /** if true pagination component will be disabled */\n        this.disabled = false;\n        /** fired when total pages count changes, $event:number equals to total pages count */\n        this.numPages = new EventEmitter();\n        /** fired when page was changed, $event:{page, itemsPerPage} equals to object\n         * with current page index and number of items per page\n         */\n        this.pageChanged = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.classMap = '';\n        this.inited = false;\n        this._itemsPerPage = 10;\n        this._totalItems = 0;\n        this._totalPages = 0;\n        this._page = 1;\n        this.elementRef = elementRef;\n        if (!this.config) {\n            this.configureOptions(paginationConfig.main);\n        }\n    }\n    /** maximum number of items per page. If value less than 1 will display all items on one page */\n    get itemsPerPage() {\n        return this._itemsPerPage;\n    }\n    set itemsPerPage(v) {\n        this._itemsPerPage = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    /** total number of items in all pages */\n    get totalItems() {\n        return this._totalItems;\n    }\n    set totalItems(v) {\n        this._totalItems = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    get totalPages() {\n        return this._totalPages;\n    }\n    set totalPages(v) {\n        this._totalPages = v;\n        this.numPages.emit(v);\n        if (this.inited) {\n            this.selectPage(this.page);\n        }\n    }\n    get page() {\n        return this._page;\n    }\n    set page(value) {\n        const _previous = this._page;\n        this._page = value > this.totalPages ? this.totalPages : value || 1;\n        this.changeDetection.markForCheck();\n        if (_previous === this._page || typeof _previous === 'undefined') {\n            return;\n        }\n        this.pageChanged.emit({\n            page: this._page,\n            itemsPerPage: this.itemsPerPage\n        });\n    }\n    configureOptions(config) {\n        this.config = Object.assign({}, config);\n    }\n    ngOnInit() {\n        if (typeof window !== 'undefined') {\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n        }\n        // watch for maxSize\n        if (typeof this.maxSize === 'undefined') {\n            this.maxSize = this.config?.maxSize || 0;\n        }\n        if (typeof this.rotate === 'undefined') {\n            this.rotate = !!this.config?.rotate;\n        }\n        if (typeof this.boundaryLinks === 'undefined') {\n            this.boundaryLinks = !!this.config?.boundaryLinks;\n        }\n        if (typeof this.directionLinks === 'undefined') {\n            this.directionLinks = !!this.config?.directionLinks;\n        }\n        if (typeof this.pageBtnClass === 'undefined') {\n            this.pageBtnClass = this.config?.pageBtnClass || '';\n        }\n        // base class\n        if (typeof this.itemsPerPage === 'undefined') {\n            this.itemsPerPage = this.config?.itemsPerPage || 0;\n        }\n        this.totalPages = this.calculateTotalPages();\n        // this class\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.inited = true;\n    }\n    writeValue(value) {\n        this.page = value;\n        this.pages = this.getPages(this.page, this.totalPages);\n    }\n    getText(key) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return this[`${key}Text`] || this.config[`${key}Text`];\n    }\n    noPrevious() {\n        return this.page === 1;\n    }\n    noNext() {\n        return this.page === this.totalPages;\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    selectPage(page, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!this.disabled) {\n            if (event && event.target) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const target = event.target;\n                target.blur();\n            }\n            this.writeValue(page);\n            this.onChange(this.page);\n        }\n    }\n    // Create page object used in template\n    makePage(num, text, active) {\n        return { text, number: num, active };\n    }\n    getPages(currentPage, totalPages) {\n        const pages = [];\n        // Default page limits\n        let startPage = 1;\n        let endPage = totalPages;\n        const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n        // recompute if maxSize\n        if (isMaxSized && this.maxSize) {\n            if (this.rotate) {\n                // Current page is displayed in the middle of the visible ones\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n                endPage = startPage + this.maxSize - 1;\n                // Adjust if limit is exceeded\n                if (endPage > totalPages) {\n                    endPage = totalPages;\n                    startPage = endPage - this.maxSize + 1;\n                }\n            }\n            else {\n                // Visible pages are paginated with maxSize\n                startPage =\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n                // Adjust last page if limit is exceeded\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n            }\n        }\n        // Add page number links\n        for (let num = startPage; num <= endPage; num++) {\n            const page = this.makePage(num, num.toString(), num === currentPage);\n            pages.push(page);\n        }\n        // Add links to move between page sets\n        if (isMaxSized && !this.rotate) {\n            if (startPage > 1) {\n                const previousPageSet = this.makePage(startPage - 1, '...', false);\n                pages.unshift(previousPageSet);\n            }\n            if (endPage < totalPages) {\n                const nextPageSet = this.makePage(endPage + 1, '...', false);\n                pages.push(nextPageSet);\n            }\n        }\n        return pages;\n    }\n    // base class\n    calculateTotalPages() {\n        const totalPages = this.itemsPerPage < 1\n            ? 1\n            : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    }\n}\nPaginationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: PaginationComponent, deps: [{ token: i0.ElementRef }, { token: PaginationConfig }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nPaginationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.3\", type: PaginationComponent, selector: \"pagination\", inputs: { align: \"align\", maxSize: \"maxSize\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", firstText: \"firstText\", previousText: \"previousText\", nextText: \"nextText\", lastText: \"lastText\", rotate: \"rotate\", pageBtnClass: \"pageBtnClass\", disabled: \"disabled\", customPageTemplate: \"customPageTemplate\", customNextTemplate: \"customNextTemplate\", customPreviousTemplate: \"customPreviousTemplate\", customFirstTemplate: \"customFirstTemplate\", customLastTemplate: \"customLastTemplate\", itemsPerPage: \"itemsPerPage\", totalItems: \"totalItems\" }, outputs: { numPages: \"numPages\", pageChanged: \"pageChanged\" }, providers: [PAGINATION_CONTROL_VALUE_ACCESSOR], ngImport: i0, template: \"<ul class=\\\"pagination\\\" [ngClass]=\\\"classMap\\\">\\n  <li class=\\\"pagination-first page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customFirstTemplate || defaultFirstTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-prev page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page - 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPreviousTemplate || defaultPreviousTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li *ngFor=\\\"let pg of pages\\\"\\n      [class.active]=\\\"pg.active\\\"\\n      [class.disabled]=\\\"disabled && !pg.active\\\"\\n      class=\\\"pagination-page page-item\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(pg.number, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPageTemplate || defaultPageTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pg, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-next page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page + 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customNextTemplate || defaultNextTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-last page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(totalPages, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customLastTemplate || defaultLastTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n</ul>\\n\\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\\n\\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\\n\\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\\n\\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\\n\\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\\n\", dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: PaginationComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'pagination', providers: [PAGINATION_CONTROL_VALUE_ACCESSOR], template: \"<ul class=\\\"pagination\\\" [ngClass]=\\\"classMap\\\">\\n  <li class=\\\"pagination-first page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customFirstTemplate || defaultFirstTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-prev page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page - 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPreviousTemplate || defaultPreviousTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li *ngFor=\\\"let pg of pages\\\"\\n      [class.active]=\\\"pg.active\\\"\\n      [class.disabled]=\\\"disabled && !pg.active\\\"\\n      class=\\\"pagination-page page-item\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(pg.number, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPageTemplate || defaultPageTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pg, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-next page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page + 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customNextTemplate || defaultNextTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-last page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(totalPages, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customLastTemplate || defaultLastTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n</ul>\\n\\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\\n\\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\\n\\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\\n\\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\\n\\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: PaginationConfig }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { align: [{\n                type: Input\n            }], maxSize: [{\n                type: Input\n            }], boundaryLinks: [{\n                type: Input\n            }], directionLinks: [{\n                type: Input\n            }], firstText: [{\n                type: Input\n            }], previousText: [{\n                type: Input\n            }], nextText: [{\n                type: Input\n            }], lastText: [{\n                type: Input\n            }], rotate: [{\n                type: Input\n            }], pageBtnClass: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], customPageTemplate: [{\n                type: Input\n            }], customNextTemplate: [{\n                type: Input\n            }], customPreviousTemplate: [{\n                type: Input\n            }], customFirstTemplate: [{\n                type: Input\n            }], customLastTemplate: [{\n                type: Input\n            }], numPages: [{\n                type: Output\n            }], pageChanged: [{\n                type: Output\n            }], itemsPerPage: [{\n                type: Input\n            }], totalItems: [{\n                type: Input\n            }] } });\n\nclass PaginationModule {\n    static forRoot() {\n        return { ngModule: PaginationModule, providers: [] };\n    }\n}\nPaginationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: PaginationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPaginationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.3\", ngImport: i0, type: PaginationModule, declarations: [PagerComponent, PaginationComponent], imports: [CommonModule], exports: [PagerComponent, PaginationComponent] });\nPaginationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: PaginationModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: PaginationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [PagerComponent, PaginationComponent],\n                    exports: [PagerComponent, PaginationComponent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PagerComponent, PaginationComponent, PaginationConfig, PaginationModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}